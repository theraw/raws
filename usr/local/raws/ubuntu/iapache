#!/bin/bash

#check..
check() {
if [ "$(whoami)" != "root" ]
then
    echo "You need to login as root to use raws iapache! Sorry!" | lolcat -a -s 100;
    exit 1
fi

if [ -d "/etc/apache2" ]; then
  echo "Looks like apache is already installed there!" | lolcat -a -s 100;
  echo "We'll remove it so we can make a clean install!" | lolcat -a -s 100;
  apt-get remove --purge apache2 -y
  apt-get autoremove -y
  apt-get autoclean -y
fi
if [ -d "/etc/php5" ]; then
  echo "Looks like Php5 is already installed there!" | lolcat -a -s 100;
  echo "We'll remove it so we can make a clean install!" | lolcat -a -s 100;
  apt-get remove --purge php5 php5-common -y
  apt-get autoremove -y
  apt-get autoclean -y
fi
}

update() {
        clear
        echo "Starting... #Step 1." | lolcat -a -s 100;
        echo -e "Updating System..." | lolcat -a -s 100; apt-get update -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Ugrading System..." | lolcat -a -s 100; apt-get upgrade -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Ugrading System2..." | lolcat -a -s 100; apt-get dist-upgrade -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Installing Basic Packs..." | lolcat -a -s 100; apt-get install build-essential libssl-dev curl nano wget git zip unzip -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Removing What Isn't Needed!..." | lolcat -a -s 100; apt-get autoremove -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
}

install() {
        clear
        echo "Starting... #Step 3." | lolcat -a -s 100;
        echo -e "Installing Apache2..." | lolcat -a -s 100; apt-get install apache2 -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Installing Apache2-Dev..." | lolcat -a -s 100; apt-get install apache2-dev -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Installing Apache2-Utils..." | lolcat -a -s 100; apt-get install apache2-utils -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Installing php5..." | lolcat -a -s 100; apt-get install php5 php5-common -y >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
}

phpPacks() {
        clear
        echo -e "Installing php5 Packs..." | lolcat -a -s 100; apt-get install -y libapache2-mod-php5 php5-cgi php5-cli php5-curl php5-dbg php5-dev php5-gd php5-gmp php5-json php5-ldap php5-mysql php5-odbc php5-pgsql php5-pspell php5-readline php5-recode php5-sqlite php5-tidy php5-xmlrpc php5-xsl libexpect-php5 libgv-php5 libow-php5 libphp-jpgraph libphp-jpgraph-examples libphp5-embed php5-adodb php5-apcu php5-enchant php5-exactimage php5-gdcm php5-gearman php5-geoip php5-gnupg php5-imagick php5-imap php5-interbase php5-intl php5-lasso php5-librdf php5-mapscript php5-mcrypt php5-memcache php5-memcached php5-midgard2 php5-ming php5-mongo php5-msgpack php5-oauth php5-pinba php5-ps php5-radius php5-redis php5-remctl php5-rrd php5-sasl php5-stomp php5-svn php5-sybase php5-tokyo-tyrant >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
}

reconf() {
        clear
        echo "Starting... #Step 5." | lolcat -a -s 100;
m='
<Directory /hostdata/>
         Options +Indexes +FollowSymLinks -MultiViews
         AllowOverride None
         Require all granted
</Directory>
'
        echo "$m" >> /etc/apache2/apache2.conf
        cd /var/www/html; rm -Rf index.html
        curl -s -O https://raw.githubusercontent.com/theraw/raws/master/static/apache/index.html
        echo -e "Creating Host Dir..." | lolcat -a -s 100; mkdir /hostdata && chmod -R 755 /hostdata/ >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Enabling Rewrite ..." | lolcat -a -s 100; sudo a2enmod rewrite >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Enabling Mcrypt ..." | lolcat -a -s 100; sudo php5enmod mcrypt >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
        echo -e "Restarting Apache2..." | lolcat -a -s 100; service apache2 restart >> /tmp/out.txt; echo "Done." | lolcat -a -s 100;
}

Mysql() {
        clear
        echo "Installing Mysql. You Now Will Be Asked To Set A Password For Mysql!" | lolcat -a -s 100;
        sleep 5
        apt-get install mysql-server mysql-client -y
        apt-get install phpmyadmin -y
        service apache2 restart
}

mod() {
        clear
        echo -e "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*" | lolcat -a -s 100;
        echo -e "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*" | lolcat -a -s 100;
        echo -e "|||||| Apache2 & Php5 Installed! ||||||||" | lolcat -a -s 100;
        echo -e "|||||| To Host A Domain Execute -> ||||||||" | lolcat -a -s 100;
        echo -e "|||||| raws ahost example.com |||||||||||||" | lolcat -a -s 100;
        echo -e "|||||| Apache Vhost Dir Is /hostdata ||||||" | lolcat -a -s 100;
        echo -e "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*" | lolcat -a -s 100;
        echo -e "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*" | lolcat -a -s 100;
}

#Wait for..
if [ "$1" == 'iapache' ]; then
        check; update; install; phpPacks; reconf; Mysql; mod;
fi
